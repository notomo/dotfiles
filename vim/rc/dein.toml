
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
let g:loaded_matchparen = 1
'''

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
let g:submode_keep_leaving_key = 1
let g:submode_timeout = 0
'''

[[plugins]]
repo = 'vim-scripts/dbext.vim'
hook_add = '''
nnoremap [dbext] <Nop>
nmap <Space>m [dbext]
vnoremap [dbext] <Nop>
vmap <Space>m [dbext]

nnoremap [dbext]u :<C-u>DBExecSQLUnderCursor<CR>
vnoremap [dbext]e :DBExecVisualSQL<CR>
nnoremap [dbext]l :<C-u>DBExecSQL SHOW TABLES;<CR>
nnoremap [dbext]d :<C-u>DBDescribeTable<CR>
nnoremap [dbext]h :<C-u>DBHistory<CR>
nnoremap [dbext]r :<C-u>DBResultsToggleResize<CR>
nnoremap [dbext]e :<C-u>DBExecSQL<Space>
vnoremap [dbext]s :<C-u>call tmno3#dbext#select_value()<CR>

command! -nargs=1 DescribeTableFromName call tmno3#dbext#describe(<f-args>)
nnoremap [dbext]f :<C-u>DescribeTableFromName<Space>

command! -range ExplainSQL :<line1>,<line2>call tmno3#dbext#explain()
vnoremap [dbext]x :<C-u>'<,'>ExplainSQL<CR>

command! -range ExecuteLimitSQL :<line1>,<line2>call tmno3#dbext#limit_execute()
vnoremap [dbext]m :<C-u>'<,'>ExecuteLimitSQL<CR>
'''

[[plugins]]
repo = 'thinca/vim-singleton'
if = "has('clientserver')"

[[plugins]]
repo = 'thinca/vim-zenspace'
hook_add = '''
let g:zenspace#default_mode = 'on'
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = 'source ~/.vim/rc/plugins/fugitive_mapping.vim'

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
let g:yankround_use_region_hl = 1
nmap p <Plug>(yankround-p)
xmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap <C-p> <Plug>(yankround-prev)
nmap <C-n> <Plug>(yankround-next)
'''

[[plugins]]
repo = 'Shougo/neco-vim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = "has('lua')"
hook_add = 'source ~/.vim/rc/plugins/neocomplete_setting.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = 'neosnippet-snippets'
hook_add = '''
xmap <Space>S <Plug>(neosnippet_expand_target)
nnoremap [file]s :<C-u>:NeoSnippetEdit<CR>
imap <expr><TAB> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
let g:neosnippet#snippets_directory = '~/.vim/snippets/'
let g:neosnippet#disable_runtime_snippets = {'_' : 1}
'''

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'vim-jp/vital.vim'

[[plugins]]
repo = 'kana/vim-smartword'
hook_add = '''
map w <Plug>(smartword-w)
map b <Plug>(smartword-b)
map e <Plug>(smartword-e)
'''

# [[plugins]]
# repo = 'itchyny/lightline.vim'
# hook_add = 'source ~/.vim/rc/plugins/lightline.vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

# [[plugins]]
# repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'rhysd/vim-color-spring-night'
hook_add = '''
let g:spring_night_kill_italic = 1
'''

