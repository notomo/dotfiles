hook_add = '''
let g:python_highlight_all = 1

let g:markdown_fenced_languages = [
\  'vim',
\]

let g:ft_ignroe_pat = '\.\(Z\|gz\|bz2\|zip\|tgz\|log\)$'
'''

[ftplugin]

_ = '''
if &filetype !=# 'help'
    setlocal textwidth=0
endif
'''

python = '''
setlocal completeopt-=preview
'''

php = '''
setlocal noexpandtab
setlocal matchpairs+==:;
setlocal completeopt-=preview
setlocal dictionary=~/dotfiles/vim/dict/php.dict
if match(fnamemodify(expand('%'), ':t'), '^\k\+Test.php$') != -1
    setlocal dictionary+=~/dotfiles/vim/dict/phpunit.dict
    setlocal dictionary+=~/dotfiles/vim/dict/mockery.dict
else
    setlocal dictionary-=~/dotfiles/vim/dict/phpunit.dict
    setlocal dictionary-=~/dotfiles/vim/dict/mockery.dict
endif

if exists('loaded_matchit')
    call notomo#matchit#sql()
endif

let b:textobj_function_select = function('textobj#function#java#select')
'''

smarty = '''
setlocal noexpandtab

if exists('loaded_matchit')
    call notomo#matchit#smarty()
endif
'''

sql = '''
if exists('loaded_matchit')
    call notomo#matchit#sql()
endif
'''

neosnippet = '''
setlocal noexpandtab
'''

vim = '''
setlocal foldmethod=marker
if exists('loaded_matchit')
    call notomo#matchit#vim()
endif
'''

help = '''
setlocal iskeyword+=:
setlocal iskeyword+=#
setlocal iskeyword+=-
'''

xml = '''
setlocal noexpandtab
'''

blade = '''
let b:caw_wrap_oneline_comment = ['{{-- ', ' --}}']
setlocal noexpandtab
'''

jesponsiv2 = '''
nnoremap <buffer> [file]rl :<C-u>JesponseReload<CR>
'''

vader = '''
nnoremap <buffer> [exec]t :<C-u>Vader %<CR>
'''
cs = '''
setlocal completeopt-=preview
setlocal expandtab
'''

ruby = '''
setlocal tabstop=2
setlocal softtabstop=2
'''

go = '''
nnoremap <buffer> [keyword]o :<C-u>GoDef<CR>
nnoremap <buffer> [keyword]v :<C-u>vsplit \| GoDef<CR>
nnoremap <buffer> [keyword]h :<C-u>split \| GoDef<CR>
nnoremap <buffer> [keyword]t :<C-u>call notomo#window#duplicate() \| GoDef<CR>
'''
