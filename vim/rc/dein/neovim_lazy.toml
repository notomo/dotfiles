
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
hook_add = '''
let g:deoplete#enable_at_startup = 1
'''
hook_source = 'source ~/.vim/rc/plugins/deoplete.vim'

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
hook_source = '''
let g:deoplete#sources#jedi#python_path = '/usr/bin/python3.5'
'''

[[plugins]]
repo = 'zchee/deoplete-go'
on_ft = 'go'
build = 'make'
hook_source = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
'''

[[plugins]]
repo = 'fszymanski/deoplete-emoji'
on_ft = 'markdown'
hook_add = '''
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'

[[plugins]]
repo = 'ujihisa/neco-look'
if = "executable('look')"

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = 'c'
hook_add = '''
let g:deoplete#sources#clang#libclang_path = '/usr/lib64/llvm/libclang.so'
let g:deoplete#sources#clang#clang_header = '/usr/lib/clang'
'''

[[plugins]]
repo = 'OmniSharp/omnisharp-vim'
on_ft = 'cs'
build = 'xbuild server/OmniSharp.sln'
hook_add = '''
let g:OmniSharp_start_without_solution = 0
let g:OmniSharp_typeLookupInPreview = 0
let g:Omnisharp_start_server = 0
'''

[[plugins]]
repo = 'autozimu/deoplete-omnisharp'
depends = ['omnisharp-vim']
on_ft = 'cs'
hook_add = '''
let g:OmniSharp_host='http://localhost:2000'
'''
[[plugins]]
repo = 'mhartington/nvim-typescript'
on_ft = 'vue'
hook_add = '''
let g:nvim_typescript#vue_support = 1
'''

# [[plugins]]
# repo = 'notomo/deoplete-padawan'
# rev = 'wip'
# build = 'composer install'
# on_ft = 'php'

[[plugins]]
repo = 'notomo/coverage.nvim'
on_ft = ['php']
hook_add = '''
nnoremap [test]cs :<C-u>CoverageShow<CR>
nnoremap [test]cu :<C-u>CoverageUnset<CR>
nnoremap [test]cc :<C-u>CoverageEcho<CR>
'''

# [[plugins]]
# repo = 'dbgx/lldb.nvim'
# on_ft = ['c', 'cpp']
# hook_add = '''
# '''

# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# on_ft = ['python', 'go', 'javascript']
# depends = 'denite.nvim'
# on_source = 'deoplete.nvim'
# hook_add = '''
# nnoremap [lc] <Nop>
# nmap <Leader>f [lc]
# nnoremap <silent> [lc]d :<C-u>call LanguageClient_textDocument_definition()<CR>
# nnoremap <silent> [lc]r :<C-u>call LanguageClient_textDocument_rename()<CR>
# nnoremap <silent> [lc]k :<C-u>call LanguageClient_textDocument_hover()<CR>
# nnoremap <silent> [denite]ld :<C-u>Denite documentSymbol<CR>
# nnoremap <silent> [denite]lw :<C-u>Denite workspaceSymbol<CR>
# nnoremap <silent> [denite]lr :<C-u>Denite references -auto-preview -immediately-1<CR>
# let g:LanguageClient_autoStart = 1
#
# let g:LanguageClient_serverCommands = {}
# let g:LanguageClient_serverCommands['python'] = ['pyls']
# " let g:LanguageClient_serverCommands['javascript'] = ['javascript-typescript-stdio']
# " let g:LanguageClient_serverCommands['go'] = ['go-langserver']
#
# let g:LanguageClient_signColumnAlwaysOn = 0
# let g:LanguageClient_diagnosticsEnable = 0
#
# '''

# [[plugins]]
# repo = 'roxma/LanguageServer-php-neovim'
# depends = 'LanguageClient-neovim'
# on_ft = 'php'
# build = 'composer install && composer run-script parse-stubs'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_post_update = 'GoInstallBinaries'
hook_source = '''
let g:go_auto_type_info = 1
let g:go_auto_sameids = 0
let g:go_doc_keywordprg_enabled = 0
let g:go_fmt_autosave = 0
let g:go_list_type = "quickfix"
'''
