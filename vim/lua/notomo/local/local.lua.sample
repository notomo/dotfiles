-- vim:ft=lua

local home = vim.fn.expand("~")

local group = vim.api.nvim_create_augroup("notomo_local", {})
vim.api.nvim_create_autocmd({ "BufRead", "BufEnter" }, {
  group = group,
  pattern = { vim.fn.expand("~/workspace/neovim/") .. "*" },
  callback = function()
    vim.keymap.set("n", "[test]t", function()
      require("cmdhndlr").test({
        name = "make/make",
        working_dir_marker = function()
          return vim.fn.expand("~/dotfiles/tool/nvim_development/Makefile")
        end,
        layout = { type = "tab" },
        env = {
          TEST_FILE = vim.fn.expand("%:p:s?" .. home .. "/workspace/neovim/??"),
        },
      })
    end, { buffer = true })

    vim.keymap.set("n", "[exec]bl", function()
      require("cmdhndlr").build({
        name = "make/make",
        working_dir_marker = function()
          return vim.fn.expand("~/dotfiles/tool/nvim_development/Makefile")
        end,
      })
    end, { buffer = true })

    vim.keymap.set("n", "S", function()
      require("cmdhndlr").run({
        name = "make/make",
        runner_opts = { target = "build_release_with_deb_info" },
        working_dir_marker = function()
          return vim.fn.expand("~/dotfiles/tool/nvim_development/Makefile")
        end,
        layout = { type = "tab" },
      })
    end, { buffer = true })
  end,
})

vim.api.nvim_create_autocmd({ "BufRead", "BufEnter" }, {
  group = group,
  pattern = { vim.fn.expand("~/workspace/neovim/") .. "**/*.lua" },
  callback = function()
    vim.keymap.set("n", "[test]f", function()
      require("cmdhndlr").test({
        name = "make/make",
        runner_opts = { target = "functionaltest" },
        layout = { type = "tab" },
        env = {
          TEST_FILE = vim.fn.expand("%:p:s?" .. home .. "/workspace/neovim/??"),
          TEST_FILTER = ".*WIP.*",
        },
      })
    end, { buffer = true })
  end,
})
