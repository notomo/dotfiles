
- name: set variables
  set_fact:
    phpmanual_dir: "{{ home_dir }}/.vim/reference/phpmanual"

- name: install with homebrew
  homebrew:
    name:
      - php
      - composer
  when: is_macos

- name: install yum repository for php
  yum: name=http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
  when: is_centos
  become: yes

- name: install php with yum
  yum:
    name:
      - php
      - php-cli
      - php-common
      - php-devel
      - php-fpm
      - php-gd
      - php-mbstring
      - php-mysqlnd
      - php-pdo
      - php-pecl-apcu
      - php-soap
      - php-xml
      - php-xmlrpc
      - php-pecl-xdebug
    enablerepo: remi-php71
  when: is_centos
  become: yes

- name: mkdir .composer
  file:
    path: "{{ home_dir }}/.composer"
    state: directory

- name: copy composer.json
  copy:
    src: composer.json
    dest: "{{ home_dir }}/.composer/composer.json"

- name: check composer
  stat:
    path: "/usr/local/bin/composer"
  register: composer_installed
  when: is_centos

- name: check composer_installer
  stat:
    path: "{{ app_dir }}/composer_installer.php"
  register: composer_installer_downloaded
  when: is_centos

- name: download composer
  get_url:
    url: https://getcomposer.org/installer
    dest: "{{ app_dir }}/composer_installer.php"
  when: is_centos and not composer_installer_downloaded.stat.exists

- name: install composer
  shell:
    chdir: "{{ app_dir }}"
    cmd: "php composer_installer.php"
  when: is_centos and not composer_installed.stat.exists

- name: copy composer.phar
  copy:
    src: "{{ app_dir }}/composer.phar"
    dest: /usr/local/bin/composer
    remote_src: True
    mode: 0755
  become: yes
  when: is_centos and not composer_installed.stat.exists

- name: comoser install
  composer:
    command: install
    global_command: yes
    working_dir: "{{ home_dir }}/.composer"

- name: mkdir for phpmanual
  file:
    path: "{{ phpmanual_dir }}"
    state: directory

- name: find phpmanual
  find:
    paths:  "{{ phpmanual_dir }}"
    patterns: ".html"
    file_type: file
  register: phpmanual_files

- name: unarchive phpmanual
  unarchive:
    src: http://jp2.php.net/get/php_manual_ja.tar.gz/from/this/mirror
    dest: "{{ phpmanual_dir }}"
    remote_src: yes
    extra_opts: [--strip-components=1]
  when: not phpmanual_files.matched
