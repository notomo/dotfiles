vim.g.mapleader = ","
vim.g.maplocalleader = "<Leader>l"

local set_prefix = function(modes, name, key)
  local name_key = ("[%s]"):format(name)
  vim.keymap.set(modes, name_key, "<Nop>")
  vim.keymap.set(modes, key, name_key, { remap = true })
end

set_prefix({ "n", "x" }, "exec", "<Space>x")
set_prefix({ "n" }, "keyword", "<Space>k")
set_prefix({ "n" }, "file", "<Space>f")
set_prefix({ "n", "x" }, "operator", "<Space><Leader>")
set_prefix({ "n", "x" }, "finder", "<Space>d")
set_prefix({ "n" }, "qf", "<Space>q")
set_prefix({ "n" }, "winmv", "m")
set_prefix({ "n" }, "win", "<Space>w")
set_prefix({ "n", "x" }, "tab", "t")
set_prefix({ "n" }, "term", "<Space>t")
set_prefix({ "n", "x" }, "arith", "<Space>a")
set_prefix({ "n", "x" }, "yank", "<Space>y")
set_prefix({ "n" }, "newline", "o")

vim.keymap.set("n", "[exec]r", [[<Cmd>source $DOTFILES/tool/vscode/neovim.vim<CR><Cmd>echomsg 'reloaded'<CR>]])
vim.keymap.set("n", "[exec]R", function()
  require("vscode").action("workbench.action.reloadWindow")
end)
vim.keymap.set("n", "[exec]f", function()
  require("vscode").action("workbench.action.toggleSidebarVisibility")
end)
vim.keymap.set("n", "[exec]m", function()
  require("vscode").action("markdown.showPreviewToSide")
end)
vim.keymap.set("n", "[exec]n", [[<Cmd>nohlsearch<CR>]])
vim.keymap.set("n", "[exec]ljo", function()
  require("vscode").action("liveshare.join")
end)
vim.keymap.set("n", "[exec]ls", function()
  require("vscode").action("liveshare.start")
end)
vim.keymap.set("n", "[exec]o", function()
  require("vscode").action("workbench.explorer.fileView.focus")
end)
vim.keymap.set("n", "[exec]N", function()
  require("notomo.lib.edit").note()
end)

vim.keymap.set("n", "k", [[gk]])
vim.keymap.set("n", "j", [[gj]])
vim.keymap.set("x", "k", [[gk]])
vim.keymap.set("x", "j", [[gj]])

vim.keymap.set("n", "ge", [[$]])
vim.keymap.set("x", "ge", [[$]])
vim.keymap.set("o", "ge", [[$]])
vim.keymap.set("n", "ga", [[^]])
vim.keymap.set("x", "ga", [[^]])
vim.keymap.set("o", "ga", [[^]])
vim.keymap.set("n", "gh", [[0]])
vim.keymap.set("x", "gh", [[0]])
vim.keymap.set("o", "gh", [[0]])
vim.keymap.set("n", "gz", [[G]])
vim.keymap.set("x", "gz", [[G]])
vim.keymap.set("o", "gz", [[G]])

vim.keymap.set("o", "gp", [[])]])
vim.keymap.set("x", "gp", [[])h]])
vim.keymap.set("o", "gd", [[]}]])
vim.keymap.set("x", "gd", [[]}h]])
vim.keymap.set("o", "gl", [=[t]]=])
vim.keymap.set("o", "gs", [[t"]])
vim.keymap.set("o", "gb", [[t`]])
vim.keymap.set("o", "gq", [[t']])
vim.keymap.set("o", "gx", [[t*]])
vim.keymap.set("o", "gt", [[t>]])
vim.keymap.set("o", "g;", [[t;]])
vim.keymap.set("o", "g,", [[t,]])
vim.keymap.set("o", "g.", [[t.]])
vim.keymap.set("o", "gc", [[t:]])
vim.keymap.set("o", "gP", [[t(]])

vim.keymap.set("n", "go", function()
  require("vscode").action("workbench.action.navigateBack")
end)
vim.keymap.set("n", "gi", function()
  require("vscode").action("workbench.action.navigateForward")
end)

vim.keymap.set("n", "<Space>h", [[<C-v>]])
vim.keymap.set("n", "<Space>l", [[<S-v>]])
vim.keymap.set("n", "<Space>v", [[gv]])
vim.keymap.set("x", "<Space>h", [[<C-v>]])
vim.keymap.set("x", "<Space>l", [[<S-v>]])
vim.keymap.set("x", "<Space>v", [[v]])
vim.keymap.set("x", "v", [[<ESC>]])

vim.keymap.set("x", "<S-j>", [[}]])
vim.keymap.set("x", "<S-k>", [[{]])
-- for matchit
vim.keymap.set("x", "<S-l>", [[%]])
vim.keymap.set("n", "<S-l>", [[<Cmd>keepjumps normal %<CR>]])

vim.keymap.set("n", "<S-j>", [[<Cmd>keepjumps normal! }<CR>]])
vim.keymap.set("n", "<S-k>", [[<Cmd>keepjumps normal! {<CR>]])

vim.keymap.set("n", "[newline]o", function()
  for _ in ipairs(vim.fn.range(vim.v.count1)) do
    vim.fn.append(vim.fn.line("."), "")
  end
end, { silent = true })
vim.keymap.set("n", "[newline]j", function()
  for _ in ipairs(vim.fn.range(vim.v.count1)) do
    vim.fn.append(vim.fn.line("."), "")
    vim.cmd.normal({ args = { "j" }, bang = true })
  end
end, { silent = true })

vim.keymap.set("n", "[arith]j", function()
  return require("notomo.lib.edit").inc_or_dec(false)
end, { expr = true })
vim.keymap.set("n", "[arith]k", function()
  return require("notomo.lib.edit").inc_or_dec(true)
end, { expr = true })
vim.keymap.set("x", "[arith]j", [[<C-x>gv]])
vim.keymap.set("x", "[arith]k", [[<C-a>gv]])
vim.keymap.set("x", "[arith]d", [[g<C-x>gv]])
vim.keymap.set("x", "[arith]u", [[g<C-a>gv]])

vim.keymap.set("n", "[file]w", function()
  require("vscode").action("workbench.action.files.save")
end)

vim.keymap.set("n", "x", [["_x]])
vim.keymap.set("x", "x", [["_x]])

vim.keymap.set("n", "[operator]x", [["_d]])
vim.keymap.set("x", "[operator]x", [["_d]])

vim.keymap.set("n", ";", [[:]])
vim.keymap.set("n", ":", [[;]])
vim.keymap.set("x", ";", [[:]])
vim.keymap.set("x", ":", [[;]])

local set_ia_xo = function(lhs, rhs)
  local inner_lhs = "i" .. lhs
  local inner_rhs = "i" .. rhs
  local around_lhs = "a" .. lhs
  local around_rhs = "a" .. rhs
  vim.keymap.set({ "x", "o" }, inner_lhs, inner_rhs)
  vim.keymap.set({ "x", "o" }, around_lhs, around_rhs)
end
set_ia_xo("o", "p")
set_ia_xo(";", "w")
set_ia_xo("<Space>", "W")
set_ia_xo("t", ">")
set_ia_xo("T", "t")
set_ia_xo("p", ")")
set_ia_xo("l", "]")
set_ia_xo("w", '"')
set_ia_xo("q", "'")
set_ia_xo("d", "}")
set_ia_xo("b", "`")

vim.keymap.set("n", "[winmv]a", function()
  require("vscode").action("workbench.action.navigateLeft")
end)
vim.keymap.set("n", "[winmv]x", function()
  require("vscode").action("workbench.action.navigateDown")
end)
vim.keymap.set("n", "[winmv]w", function()
  require("vscode").action("workbench.action.navigateUp")
end)
vim.keymap.set("n", "[winmv]l", function()
  require("vscode").action("workbench.action.navigateRight")
end)

vim.keymap.set("n", "[win]v", function()
  require("vscode").action("workbench.action.splitEditorLeft")
end)
vim.keymap.set("n", "[win]o", function()
  vim.cmd.Only()
  require("vscode").action("workbench.action.closeSidebar")
end)

vim.keymap.set("n", "[term]o", function()
  require("vscode").call("workbench.action.createTerminalEditor")
end)

vim.keymap.set("n", "T", function()
  require("vscode").action("workbench.action.toggleMaximizedPanel")
end)

vim.keymap.set("n", "[tab]q", function()
  require("vscode").action("workbench.action.closeActiveEditor")
end)
vim.keymap.set("n", "[tab]o", function()
  require("vscode").action("workbench.action.closeOtherEditors")
end)
vim.keymap.set("n", "[tab]l", function()
  require("vscode").action("workbench.action.nextEditorInGroup")
end)
vim.keymap.set("n", "[tab]a", function()
  require("vscode").action("workbench.action.previousEditorInGroup")
end)
vim.keymap.set("n", "[tab]t", function()
  require("vscode").action("workbench.action.files.newUntitledFile")
end)

vim.keymap.set("n", "[keyword]o", function()
  require("vscode").action("editor.action.revealDefinition")
end)
vim.keymap.set("n", "[keyword]e", function()
  require("vscode").action("editor.action.showHover")
end)
vim.keymap.set("n", "[exec]gr", function()
  require("vscode").action("editor.action.goToReferences")
end)
vim.keymap.set("n", "[exec]gn", function()
  require("vscode").action("editor.action.rename")
end)

vim.keymap.set("n", "[finder];", function()
  require("vscode").action("workbench.action.showCommands")
end)
vim.keymap.set("n", "[finder]k", function()
  require("vscode").action("workbench.action.openGlobalKeybindings")
end)
vim.keymap.set("n", "[finder]G", function()
  require("vscode").action("workbench.action.findInFiles")
end)
vim.keymap.set("n", "<Space>ur", function()
  require("vscode").action("workbench.action.quickOpen")
end)

vim.keymap.set("n", "[qf]n", function()
  require("vscode").action("editor.action.marker.next")
end)
vim.keymap.set("n", "[qf]p", function()
  require("vscode").action("editor.action.marker.prev")
end)
vim.keymap.set("n", "[qf]N", function()
  require("vscode").action("editor.action.marker.nextInFiles")
end)
vim.keymap.set("n", "[qf]P", function()
  require("vscode").action("editor.action.marker.prevInFiles")
end)
vim.keymap.set("n", "[qf]o", function()
  require("vscode").action("workbench.action.problems.focus")
end)

vim.keymap.set("n", "<Space>c", [[<Cmd>VSCodeCommentary<CR>]])
vim.keymap.set("x", "<Space>c", [[:VSCodeCommentary<CR>]])

vim.keymap.set("n", "[yank]d", function()
  require("notomo.lib.edit").yank(vim.fn.strftime("%Y-%m-%d"))
end, { silent = true })
vim.keymap.set("n", "[yank]w", function()
  require("notomo.lib.edit").yank(vim.fn.expand("%:p:h:t"))
end, { silent = true })

vim.opt.ignorecase = true
vim.opt.smartcase = true
vim.keymap.set("n", "sj", [[*N]])
vim.keymap.set("n", "sk", [[#N]])

local pack_dir = vim.fs.joinpath(vim.fn.stdpath("config"), "packages")
vim.opt.packpath:prepend(pack_dir)

vim.cmd.packadd([[vim-textobj-user]])
vim.cmd.packadd([[vim-operator-user]])
vim.cmd.packadd([[misclib.nvim]])

vim.cmd.packadd([[CamelCaseMotion]])
vim.keymap.set({ "n", "x", "o" }, "<Leader>w", "<Plug>CamelCaseMotion_w")
vim.keymap.set({ "n", "x", "o" }, "<Leader>b", "<Plug>CamelCaseMotion_b")
vim.keymap.set({ "n", "x", "o" }, "<Leader>e", "<Plug>CamelCaseMotion_e")

vim.cmd.packadd([[vim-operator-replace]])
vim.keymap.set("n", "r", [[<Plug>(operator-replace)]])
vim.keymap.set("x", "r", [[<Plug>(operator-replace)]])
vim.keymap.set("o", "r", [[<Plug>(operator-replace)]])

vim.cmd.packadd([[vim-smartword]])
vim.keymap.set({ "n", "x", "o" }, "w", [[<Plug>(smartword-w)]])
vim.keymap.set({ "n", "x", "o" }, "b", [[<Plug>(smartword-b)]])
vim.keymap.set({ "n", "x", "o" }, "e", [[<Plug>(smartword-e)]])
